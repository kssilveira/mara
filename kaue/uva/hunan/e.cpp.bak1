#include <iostream>
#include <cassert>
#include <bitset>

using namespace std;

bool solve(int a, int b) {
  if (a == 1 && b == 1) {
    return false;
  }
  if (b < a) {
    return solve(b, a);
  }
  for (int i = b / 2; i < b; i++) {
    if (!solve(i, b - i)) {
      return true;
    }
  }
  return false;
}

#define MAX 1000000001
bitset<MAX> dp;

int main() {
  int n;
  cin >> n;

  dp[1] = false;
  int maxsolved = 1;
  while (n != 0) {
    // bool res = solve(n, 1);

    if (n > maxsolved) {
      for (int i = maxsolved + 1; i <= n; i++) {
        bool found = false;
        for (int j = i - 1; j >= i / 2; j--) {
          int k = max(j, i - j);
          if (!dp[k]) {
            found = true;
            break;
          }
        }
        if (found) {
          dp[i] = true;
        } else {
          dp[i] = false;
        }
      }
    }
    // assert(res == dp[n]);
    bool res = dp[n];

    cout << "n: " << n << " ";
    cout << (res ? "Alice" : "Bob") << endl;

    cin >> n;
  }
}
