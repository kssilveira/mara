#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <streambuf>
#include <string>
#include <utility>
#include <vector>
 
#define r(i, n) rb(i, 0, n)
#define rb(i, b, n) rbc(i, b, n, <)
#define re(i, n) rbe(i, 0, n)
#define rbe(i, b, n) rbc(i, b, n, <=)
#define rbc(i, b, n, c) for(int i = (b); i c ((int)(n)); i++)
 
#define ri r(i, n)
#define rj r(j, n)
#define rk r(k, n)
#define rim r(i, m)
#define rjm r(j, m)
#define rkm r(k, m)

#define p(x) cout << x << " "
#define pl cout << endl
#define pn(x) cout << x << endl
#define pv(v) ri { p(v[i]); } pl;
#define pm(m) ri { rjm { p(m[i][j]); } pl; } pl;
#define pp(x) " "#x" " << x
#define ppn(x) pn(pp(x))
#define ppp(x) p(pp(x))

#define in(x) cin >> x
 
#define s(v) ((int) v.size())
#define all(v) v.begin(), v.end()
 
using namespace std;
 
typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<string> vs;

#define MAX 10000001
bitset<MAX> isnotprime;
 
int primes[700000];
int main() {
  int T;
  cin >> T;

  isnotprime.reset();
  int nprimes = 0;
  primes[nprimes++] = (2);
  for (int i = 3; i < MAX; i += 2) {
    if (!isnotprime[i]) {
      primes[nprimes++] = (i);
      for (int j = i + i; j < MAX; j += i) {
        isnotprime[j] = 1;
      }
    }
  }

  /*
  for (int i = 0; i < 5; i++) {
    cout << primes[i] << ' ';
  }//*/
  //cout << primes.size() << endl;

  while (T--) {
    int a, c;
    scanf("%d%d", &a, &c);
    //cin >> a >> c;
    if (c % a != 0) {
      //cout << "NO SOLUTION" << endl;
      printf("NO SOLUTION\n");
      continue;
    }
    int b = 1;
    for (int j = 0; a > 1 || c > 1; j++) {
      int i = primes[j];
      int left = 0, right = 0;
      int val = 1;
      while (a % i == 0) {
        a /= i;
        left++;
      }
      while (c % i == 0) {
        c /= i;
        right++;
        val *= i;
      }
      if (right > left) {
        b *= val;
      }
    }
    //cout << b << endl;
    printf("%d\n", b);
  }
} 

