#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <streambuf>
#include <string>
#include <utility>
#include <vector>
 
#define r(i, n) rb(i, 0, n)
#define rb(i, b, n) rbc(i, b, n, <)
#define re(i, n) rbe(i, 0, n)
#define rbe(i, b, n) rbc(i, b, n, <=)
#define rbc(i, b, n, c) for(int i = (b); i c ((int)(n)); i++)
 
#define ri r(i, n)
#define rj r(j, n)
#define rk r(k, n)
#define rim r(i, m)
#define rjm r(j, m)
#define rkm r(k, m)

#define p(x) cout << x << " "
#define pl cout << endl
#define pn(x) cout << x << endl
#define pv(v) ri { p(v[i]); } pl;
#define pm(m) ri { rjm { p(m[i][j]); } pl; } pl;
#define pp(x) " "#x" " << x
#define ppn(x) pn(pp(x))
#define ppp(x) p(pp(x))

#define in(x) cin >> x
 
#define s(v) ((int) v.size())
#define all(v) v.begin(), v.end()
 
using namespace std;
 
typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<string> vs;
 
ull memo[2][2][25] = {{{0}}};

int main() {
  int n, q;
  int T = 0;
  while (cin >> n >> q && n) {
    T++;
    int v[210];
    ri {
      cin >> v[i];
    }
    cout << "SET " << T << ":" << endl;
    r(Q, q) {
      int D, M;
      cin >> D >> M;
      memset(memo, 0, sizeof(memo));
      r(m, M) {
        r(i, n) {
          r(j, D) {
            memo[m % 2][i % 2][j] = 0;
          }
          if (m == 0) memo[m % 2][i % 2][v[i] % D]++;
          //else {
            if (i == 0) continue;
            r(j, D) {
              memo[m % 2][i % 2][j] += memo[m % 2][(i - 1 + 2) % 2][j];
            }
            if (m == 0) continue;
            r(j, D) {
              memo[m % 2][i % 2][(v[i] + j) % D] +=
                memo[(m - 1 + 2) % 2][(i - 1 + 2) % 2][j];
            }
          }
        //}
      }
      //*
      r(m, 2) {
        ppn(m);
        r(i, 2) {
          r(j, D) {
            cout << memo[m % 2][i % 2][j] << " ";
          }
          pl;
        }
        pl;
      }
      pl;//*/

      cout << "QUERY " << Q + 1 << ": " <<
        memo[(M - 1 + 2) % 2][(n - 1 + 2) % 2][0] << endl;
    }
  }
} 

